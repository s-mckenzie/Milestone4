@model AdventureWorksMilestone2.Models.Product

@{
    ViewBag.Title = "Create";
}
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script>
        $(document).ready(function () {
            $("#ProductModelID").attr('disabled', true);       // Disable at start  

            $("#ProductCategoryID").change(function () {

                // Get Category ID
                var id = parseInt($("#ProductCategoryID").val());

                // If user returned to the default "Select..."
                if (isNaN(id)) {
                    $("#ProductModelID").attr('disabled', true);        // Disable Product Model selection
                    $("#ProductModelID").html("<option>Select...</option>");
                }
                else {
                    // AJAX GET -> type, url, data (category id), success
                    $.ajax({
                        type: "GET",                // Post type
                        url: "GetBikeModel/",       // Function
                        dataType: 'json',           // Using json, jquery will make parse for  you
                        data: { id: id },           // Data to send (GetBikeModel's int? id takes var id(see above))
                        success: function (data) {
                            var options = "";

                            
                            // Loop through every model
                            for (var i = 0; i < data.length; i++) {
                                options = options + "<option value=\"" + data[i].Value + "\">" + data[i].Text + "</option>";
                                //alert(options + " | " + data[i].Value);
                            }
                            
                            $("#ProductModelID").html(options.toString());
                            //alert(JSON.stringify(data));
                        }
                    })

                    
                    $("#ProductModelID").attr("disabled", false);        // Enable Product Model selection
                }
            });

        });
    </script>
</head>

<h2>Create</h2>


@using (Html.BeginForm("Create", "BikeManager", FormMethod.Post, new { enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StandardCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StandardCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StandardCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ListPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ListPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">    
                @Html.DropDownList("ProductCategoryID", (IEnumerable<SelectListItem>)ViewBag.ProductCategory, "Select...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductModelID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">              
                @Html.DropDownList("ProductModelID", Enumerable.Empty<SelectListItem>(), "Select...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellStartDate, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss tt") } })
                @Html.ValidationMessageFor(model => model.SellStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SellEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscontinuedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscontinuedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscontinuedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThumbNailPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="uploadFile" id="uploadFile" accept="image/*" class="form-control">
                <!-- Will need to work on this after byte array gets replaced-->
                @*@Html.TextBox("file", "", new { @class = "text-danger", @type = "file", @name = "file", @accept = "image/*" })*@
                @Html.ValidationMessageFor(model => model.ThumbNailPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
